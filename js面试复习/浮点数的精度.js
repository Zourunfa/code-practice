/**
 * ES中的Number使用的是IEEE754标准来表示整数和浮点数的值
 * 而且用64位来存储一个浮点数
 * 
 * 然后你会返现 0.1 转化二进制是一个无线循环的小数
 * 
 * 所以当 0.1 存下来的时候，就已经发生了精度丢失，
 * 当我们用浮点数进行运算的时候，使用的其实是精度丢失后的数。
 * 
 * 
 * ：对阶、尾数运算、规格化、舍入处理、溢出判断。我们来简单看一下 0.1 和 0.2 的计算。
 */

const a = 0.1 + 0.2  //0.3000 0000 0000 0000 4
console.log(a === 0.3);